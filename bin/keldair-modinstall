#!/usr/bin/env perl
# keldair-modinstall - Install modules from external GitHub repository
# Copyright 2011 Alexandria M. Wolcott <alyx@woomoo.org>
# Licensed under the 3-clause BSD.

use strict;
use warnings;
use FindBin qw($Bin);
use feature qw(say);
use Getopt::Long;
use Furl;

our $VERSION = '0.1.1';

GetOptions( 'i=s' => \my $option_i, 's=s' => \my $option_s, 'v' => \my $option_v, 'h' => \my $option_h, 'l' => \my $option_l, 'r=s' => \my $option_r ) or exit(1);

if ($option_v) { print <<ENDVER;

modinstall (Keldair utility) $VERSION
Copyright (c) 2011 Ethrik Project
License: 3-Clause BSD.

ENDVER
exit(1);
}

if ($option_h) { print <<ENDHELP;

Usage: $0 -[v|h|i [argument]]
   -v	Returns the modmanage version.
   -h	Returns this help message.
   -i	Installs the Keldair module specified in the argument.
   -l   Lists all available modules.
   -s   Searches for the pattern specified by the regex in the argument.
   -r   Specify the repo URL.

ENDHELP
exit(1);
}

my $repo = 'https://github.com/ethrik/kmods/raw/master';

$repo = $option_r if $option_r;

if ($option_i) {
	my ($location,$module) = split('/',$option_i);
	say("Installing a module on a global scope is impossbile without root. Aborting...") and exit if $Bin eq "/usr/bin" and $> != 0;
	my $furl = Furl->new(
		agent => "KeldairModinstall/$VERSION",
		timeout => 10
	);
        
        my %path;
        $path{config} = "$Bin/../etc/keldair.conf";
        $path{config} = $ENV{HOME}."/.keldair/keldair.conf" if $Bin eq "/usr/bin";
        $path{mod} = "$Bin/../lib/Keldair/Module";
        $path{mod} = "/usr/lib/perl5/site_perl/Keldair/Module" if $Bin eq "/usr/bin" && $> == 0;
        $path{mod} = "$ENV{HOME}/.keldair/lib/Keldair/Module" if $Bin eq "/usr/bin" && $> != 0;

	my $res = $furl->get("$repo/$location/$module.pm");
    die $res->status_line unless $res->is_success;
    my $folder = ucfirst $location;
	mkdir "$path{mod}/$folder" unless (-d "$path{mod}/$folder" );
    open(my $fh, '>', "$path{mod}/$folder/$module.pm")
	  or die("Cannot open file: $!");
	print {$fh} $res->content;
	close($fh) or die("Cannot close file: $!");
	open(my $file, '<', "$path{mod}/$folder/$module.pm");
	while (my $line = <$file>) {
		if ($line =~ /# modreq: (.*)/i) {
			my @mods = split(',',$1);
			my $nf;
			foreach (@mods) {
				eval('require '.$_.'; 1;') and next or $nf .= $_.' '
			}
			$nf = "None - You've got all the dependencies." if !$nf;
			say("$module requires the following modules to be installed from CPAN: ".$nf);
		}
		if ($line =~ /# modconf: (.*)/i) {
			my $modconf = $1;
		    say "$module requires the following additional config values: $modconf";
        }
	}   
	close($file);
}

if ($option_s) {
	my $search = qr/$option_s/i;
	my $furl = Furl->new(
		agent => "KeldairModinstall/$VERSION",
		timeout => 10
	);
	my $res = $furl->get('https://github.com/ethrik/kmods/raw/master/LIST');
	die $res->status_line unless $res->is_success;
	my @modules = split("\n",$res->content);
	foreach my $mod (@modules) { say $mod if $mod =~ $search; }
}

if ($option_l) {
    my $furl = Furl->new(
        agent => "KeldairModinstall/$VERSION",
        timeout => 10
    );
    my $res = $furl->get($repo.'/LIST');
    die $res->status_line unless $res->is_success;
    print $res->content;
}
