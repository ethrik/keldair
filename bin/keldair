#!/usr/bin/env perl
# Copyright 2011 Ethrik Project, et al.
# Licensed under the 3-clause BSD.
use strict;
use warnings;
use FindBin qw($Bin);
use Getopt::Long;
my $pid = $$;

BEGIN
{
    unshift @INC, "$Bin/../lib" if $Bin ne "/usr/bin";
    local $0 = 'keldair';
    my $pidf = "$Bin/../etc/keldair.pid";
    $pidf = $ENV{HOME}."/.keldair/keldair.pid" if $Bin eq "/usr/bin";
    open (my $pidfile, '>',$pidf)
        or die("Cannot open pidfile $pidf");
    print {$pidfile} $$;
    close $pidfile or die("Cannot close pidfile.");
}

use Keldair;
use Keldair::CoreCommands;
use Keldair::State;

our ($dbug, $cfile);
GetOptions("debug!" => \$dbug, "config=s" => \&cfile);
$keldair->debug($dbug) if defined $dbug;
$cfile = $Bin eq "/usr/bin/" ? "$ENV{HOME}/.keldair/keldair.conf" : "$Bin/../etc/keldair.conf" if !$cfile;

open STDIN, '<', '/dev/null' or die( "Can't read /dev/null: $!" ) unless $^O eq 'MSWin32' or $keldair->debug;
open STDOUT, '>>', '/dev/null' or die( "Can't write to /dev/null: $!" ) unless $^O eq 'MSWin32' or $keldair->debug;
open STDERR, '>>', '/dev/null' or die( "Can't write to /dev/null: $!" ) unless $^O eq 'MSWin32' or $keldair->debug;
fork and exit unless $^O eq 'MSWin32' or $keldair->debug;

our $VERSION = $Keldair::VERSION;

my $modules = $keldair->config('modules');
$keldair->modload($_) foreach @{ $modules };
$keldair->hook_run('OnStart');
$keldair->hook_run('OnRehash');
my $sock = $keldair->connect();
$keldair->hook_run('OnPreConnect');

while(my $buffer = <$sock>)
{
    print "R: $buffer" if $keldair->debug;
    chomp $buffer;
    chop $buffer;
    $keldair->parse($buffer);
}

close $sock;
$keldair->hook_run('OnDisconnect');

# Kill the first PID we had
local $SIG{CHLD} = sub {
    print "CHLD - KILLING $pid\n";
    kill(TERM => $pid);
};

local $SIG{TERM} = sub {
    $keldair->quit('Caught SIGTERM, exiting.');
    $keldair->log(INFO => 'Caught SIGTERM, exiting.', 1);
};

local $SIG{INT} = sub {
    $keldair->quit('Caught SIGINT, exiting.');
    $keldair->log(INFO => 'Caugt SIGINT, exiting.', 1);
};

END
{
    $keldair->hook_run('OnEnd');
    my $pidf = "$Bin/../etc/keldair.pid";
    $pidf = $ENV{HOME}."/.keldair/keldair.pid" if $Bin eq "/usr/bin";
    unlink $pidf;
    $keldair->log(INFO => 'Keldair shutdown complete; closing errors: '.($@ ? $@ : 'none'));
}
